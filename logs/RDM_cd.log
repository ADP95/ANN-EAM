nohup: ignoring input
INFO:cmdstanpy:compiling stan file /storage/users/adadras/ANN-EAM/stan files/RDM/RDM_cd.stan to exe file /storage/users/adadras/ANN-EAM/stan files/RDM/RDM_cd
INFO:cmdstanpy:compiled model executable: /storage/users/adadras/ANN-EAM/stan files/RDM/RDM_cd
WARNING:cmdstanpy:Stan compiler has produced 19 warnings:
WARNING:cmdstanpy:
--- Translating Stan model to C++ code ---
bin/stanc  --o=/tmp/tmpr1j6k1h0/tmp13eksge4.hpp /tmp/tmpr1j6k1h0/tmp13eksge4.stan
Warning in '/tmp/tmpr1j6k1h0/tmp13eksge4.stan', line 54, column 4: Declaration
    of arrays by placing brackets after a variable name is deprecated and
    will be removed in Stan 2.32.0. Instead use the array keyword before the
    type. This can be changed automatically using the auto-format flag to
    stanc
Warning in '/tmp/tmpr1j6k1h0/tmp13eksge4.stan', line 55, column 4: Declaration
    of arrays by placing brackets after a variable name is deprecated and
    will be removed in Stan 2.32.0. Instead use the array keyword before the
    type. This can be changed automatically using the auto-format flag to
    stanc
Warning in '/tmp/tmpr1j6k1h0/tmp13eksge4.stan', line 56, column 4: Declaration
    of arrays by placing brackets after a variable name is deprecated and
    will be removed in Stan 2.32.0. Instead use the array keyword before the
    type. This can be changed automatically using the auto-format flag to
    stanc
Warning in '/tmp/tmpr1j6k1h0/tmp13eksge4.stan', line 57, column 4: Declaration
    of arrays by placing brackets after a variable name is deprecated and
    will be removed in Stan 2.32.0. Instead use the array keyword before the
    type. This can be changed automatically using the auto-format flag to
    stanc
Warning in '/tmp/tmpr1j6k1h0/tmp13eksge4.stan', line 59, column 4: Declaration
    of arrays by placing brackets after a variable name is deprecated and
    will be removed in Stan 2.32.0. Instead use the array keyword before the
    type. This can be changed automatically using the auto-format flag to
    stanc
Warning in '/tmp/tmpr1j6k1h0/tmp13eksge4.stan', line 88, column 4: Declaration
    of arrays by placing brackets after a variable name is deprecated and
    will be removed in Stan 2.32.0. Instead use the array keyword before the
    type. This can be changed automatically using the auto-format flag to
    stanc
Warning in '/tmp/tmpr1j6k1h0/tmp13eksge4.stan', line 89, column 4: Declaration
    of arrays by placing brackets after a variable name is deprecated and
    will be removed in Stan 2.32.0. Instead use the array keyword before the
    type. This can be changed automatically using the auto-format flag to
    stanc
Warning in '/tmp/tmpr1j6k1h0/tmp13eksge4.stan', line 91, column 4: Declaration
    of arrays by placing brackets after a variable name is deprecated and
    will be removed in Stan 2.32.0. Instead use the array keyword before the
    type. This can be changed automatically using the auto-format flag to
    stanc
Warning in '/tmp/tmpr1j6k1h0/tmp13eksge4.stan', line 92, column 4: Declaration
    of arrays by placing brackets after a variable name is deprecated and
    will be removed in Stan 2.32.0. Instead use the array keyword before the
    type. This can be changed automatically using the auto-format flag to
    stanc
Warning in '/tmp/tmpr1j6k1h0/tmp13eksge4.stan', line 93, column 4: Declaration
    of arrays by placing brackets after a variable name is deprecated and
    will be removed in Stan 2.32.0. Instead use the array keyword before the
    type. This can be changed automatically using the auto-format flag to
    stanc
Warning in '/tmp/tmpr1j6k1h0/tmp13eksge4.stan', line 94, column 4: Declaration
    of arrays by placing brackets after a variable name is deprecated and
    will be removed in Stan 2.32.0. Instead use the array keyword before the
    type. This can be changed automatically using the auto-format flag to
    stanc
Warning in '/tmp/tmpr1j6k1h0/tmp13eksge4.stan', line 95, column 4: Declaration
    of arrays by placing brackets after a variable name is deprecated and
    will be removed in Stan 2.32.0. Instead use the array keyword before the
    type. This can be changed automatically using the auto-format flag to
    stanc
Warning in '/tmp/tmpr1j6k1h0/tmp13eksge4.stan', line 106, column 4: Declaration
    of arrays by placing brackets after a variable name is deprecated and
    will be removed in Stan 2.32.0. Instead use the array keyword before the
    type. This can be changed automatically using the auto-format flag to
    stanc
Warning in '/tmp/tmpr1j6k1h0/tmp13eksge4.stan', line 107, column 4: Declaration
    of arrays by placing brackets after a variable name is deprecated and
    will be removed in Stan 2.32.0. Instead use the array keyword before the
    type. This can be changed automatically using the auto-format flag to
    stanc
Warning in '/tmp/tmpr1j6k1h0/tmp13eksge4.stan', line 108, column 4: Declaration
    of arrays by placing brackets after a variable name is deprecated and
    will be removed in Stan 2.32.0. Instead use the array keyword before the
    type. This can be changed automatically using the auto-format flag to
    stanc
Warning in '/tmp/tmpr1j6k1h0/tmp13eksge4.stan', line 109, column 4: Declaration
    of arrays by placing brackets after a variable name is deprecated and
    will be removed in Stan 2.32.0. Instead use the array keyword before the
    type. This can be changed automatically using the auto-format flag to
    stanc
Warning in '/tmp/tmpr1j6k1h0/tmp13eksge4.stan', line 110, column 4: Declaration
    of arrays by placing brackets after a variable name is deprecated and
    will be removed in Stan 2.32.0. Instead use the array keyword before the
    type. This can be changed automatically using the auto-format flag to
    stanc
Warning in '/tmp/tmpr1j6k1h0/tmp13eksge4.stan', line 30, column 30: Use of
    race_cdf without a vertical bar (|) between the first two arguments of a
    CDF is deprecated and will be removed in Stan 2.32.0. This can be
    automatically changed using the canonicalize flag for stanc
Warning in '/tmp/tmpr1j6k1h0/tmp13eksge4.stan', line 34, column 30: Use of
    race_cdf without a vertical bar (|) between the first two arguments of a
    CDF is deprecated and will be removed in Stan 2.32.0. This can be
    automatically changed using the canonicalize flag for stanc

--- Compiling, linking C++ code ---
g++ -std=c++1y -pthread -D_REENTRANT -Wno-sign-compare -Wno-ignored-attributes      -I stan/lib/stan_math/lib/tbb_2020.3/include    -O3 -I src -I stan/src -I lib/rapidjson_1.1.0/ -I lib/CLI11-1.9.1/ -I stan/lib/stan_math/ -I stan/lib/stan_math/lib/eigen_3.3.9 -I stan/lib/stan_math/lib/boost_1.78.0 -I stan/lib/stan_math/lib/sundials_6.1.1/include -I stan/lib/stan_math/lib/sundials_6.1.1/src/sundials    -DBOOST_DISABLE_ASSERTS          -c -Wno-ignored-attributes   -x c++ -o /tmp/tmpr1j6k1h0/tmp13eksge4.o /tmp/tmpr1j6k1h0/tmp13eksge4.hpp
g++ -std=c++1y -pthread -D_REENTRANT -Wno-sign-compare -Wno-ignored-attributes      -I stan/lib/stan_math/lib/tbb_2020.3/include    -O3 -I src -I stan/src -I lib/rapidjson_1.1.0/ -I lib/CLI11-1.9.1/ -I stan/lib/stan_math/ -I stan/lib/stan_math/lib/eigen_3.3.9 -I stan/lib/stan_math/lib/boost_1.78.0 -I stan/lib/stan_math/lib/sundials_6.1.1/include -I stan/lib/stan_math/lib/sundials_6.1.1/src/sundials    -DBOOST_DISABLE_ASSERTS                -Wl,-L,"/storage/users/adadras/.cmdstan/cmdstan-2.30.1/stan/lib/stan_math/lib/tbb" -Wl,-rpath,"/storage/users/adadras/.cmdstan/cmdstan-2.30.1/stan/lib/stan_math/lib/tbb"      /tmp/tmpr1j6k1h0/tmp13eksge4.o src/cmdstan/main.o        -Wl,-L,"/storage/users/adadras/.cmdstan/cmdstan-2.30.1/stan/lib/stan_math/lib/tbb" -Wl,-rpath,"/storage/users/adadras/.cmdstan/cmdstan-2.30.1/stan/lib/stan_math/lib/tbb"   stan/lib/stan_math/lib/sundials_6.1.1/lib/libsundials_nvecserial.a stan/lib/stan_math/lib/sundials_6.1.1/lib/libsundials_cvodes.a stan/lib/stan_math/lib/sundials_6.1.1/lib/libsundials_idas.a stan/lib/stan_math/lib/sundials_6.1.1/lib/libsundials_kinsol.a  stan/lib/stan_math/lib/tbb/libtbb.so.2 -o /tmp/tmpr1j6k1h0/tmp13eksge4
rm -f /tmp/tmpr1j6k1h0/tmp13eksge4.o

INFO:cmdstanpy:Chain [1] start processing
INFO:cmdstanpy:Chain [2] start processing
INFO:cmdstanpy:Chain [3] start processing
INFO:cmdstanpy:Chain [4] start processing
INFO:cmdstanpy:Chain [2] done processing
INFO:cmdstanpy:Chain [4] done processing
INFO:cmdstanpy:Chain [3] done processing
INFO:cmdstanpy:Chain [1] done processing
Model name: RDM_cd
Directory  ./Plots/RDM_cd/  Created 
Directory  ./stan_results/RDM_cd/  Created 
Model's configs:
{'model_name': 'RDM_cd', 'stan_file': 'RDM/RDM_cd.stan', 'dataset_name': 'fastText_FC.csv', 'plots_folder_name': 'RDM_cd', 'transf_params': ['transf_mu_drift_word', 'transf_mu_drift_nonword', 'transf_mu_threshold_word', 'transf_mu_threshold_nonword', 'transf_mu_ndt']}
   accuracy     rt    string  ...  category  word_prob  non_word_prob
0         1  0.651     curbs  ...        LF   0.999998   1.546347e-06
1         1  0.698     germs  ...        HF   0.999999   7.800695e-07
2         1  0.765      mark  ...        HF   1.000000   3.632955e-08
3         1  0.642  draftees  ...        LF   0.999610   3.904704e-04
4         1  0.674     lotto  ...        HF   0.999634   3.661419e-04

[5 rows x 11 columns]
Chain [1] method = sample (Default)
Chain [1] sample
Chain [1] num_samples = 3500
Chain [1] num_warmup = 3500
Chain [1] save_warmup = 0 (Default)
Chain [1] thin = 1 (Default)
Chain [1] adapt
Chain [1] engaged = 1 (Default)
Chain [1] gamma = 0.050000000000000003 (Default)
Chain [1] delta = 0.80000000000000004 (Default)
Chain [1] kappa = 0.75 (Default)
Chain [1] t0 = 10 (Default)
Chain [1] init_buffer = 75 (Default)
Chain [1] term_buffer = 50 (Default)
Chain [2] method = sample (Default)
Chain [2] sample
Chain [1] window = 25 (Default)
Chain [1] algorithm = hmc (Default)
Chain [1] hmc
Chain [1] engine = nuts (Default)
Chain [1] nuts
Chain [1] max_depth = 10 (Default)
Chain [1] metric = diag_e (Default)
Chain [1] metric_file =  (Default)
Chain [1] stepsize = 1 (Default)
Chain [2] num_samples = 3500
Chain [1] stepsize_jitter = 0 (Default)
Chain [1] num_chains = 1 (Default)
Chain [2] num_warmup = 3500
Chain [1] id = 1 (Default)
Chain [1] data
Chain [2] save_warmup = 0 (Default)
Chain [1] file = /tmp/tmp5jyfvpx_/rxpcg1g5.json
Chain [1] init = 2 (Default)
Chain [2] thin = 1 (Default)
Chain [1] random
Chain [1] seed = 78376
Chain [2] adapt
Chain [1] output
Chain [1] file = /storage/users/adadras/ANN-EAM/stan_results/RDM_cd/RDM_cd-20230102081807_1.csv
Chain [2] engaged = 1 (Default)
Chain [1] diagnostic_file =  (Default)
Chain [1] refresh = 100 (Default)
Chain [2] gamma = 0.050000000000000003 (Default)
Chain [1] sig_figs = -1 (Default)
Chain [1] profile_file = profile.csv (Default)
Chain [2] delta = 0.80000000000000004 (Default)
Chain [1] num_threads = 1 (Default)
Chain [1] 
Chain [2] kappa = 0.75 (Default)
Chain [2] t0 = 10 (Default)
Chain [2] init_buffer = 75 (Default)
Chain [2] term_buffer = 50 (Default)
Chain [2] window = 25 (Default)
Chain [2] algorithm = hmc (Default)
Chain [2] hmc
Chain [2] engine = nuts (Default)
Chain [2] nuts
Chain [2] max_depth = 10 (Default)
Chain [2] metric = diag_e (Default)
Chain [2] metric_file =  (Default)
Chain [2] stepsize = 1 (Default)
Chain [2] stepsize_jitter = 0 (Default)
Chain [2] num_chains = 1 (Default)
Chain [2] id = 2
Chain [2] data
Chain [2] file = /tmp/tmp5jyfvpx_/rxpcg1g5.json
Chain [2] init = 2 (Default)
Chain [2] random
Chain [2] seed = 78376
Chain [2] output
Chain [2] file = /storage/users/adadras/ANN-EAM/stan_results/RDM_cd/RDM_cd-20230102081807_2.csv
Chain [2] diagnostic_file =  (Default)
Chain [2] refresh = 100 (Default)
Chain [2] sig_figs = -1 (Default)
Chain [2] profile_file = profile.csv (Default)
Chain [2] num_threads = 1 (Default)
Chain [2] 
Chain [3] method = sample (Default)
Chain [3] sample
Chain [3] num_samples = 3500
Chain [3] num_warmup = 3500
Chain [3] save_warmup = 0 (Default)
Chain [3] thin = 1 (Default)
Chain [3] adapt
Chain [3] engaged = 1 (Default)
Chain [3] gamma = 0.050000000000000003 (Default)
Chain [3] delta = 0.80000000000000004 (Default)
Chain [3] kappa = 0.75 (Default)
Chain [3] t0 = 10 (Default)
Chain [3] init_buffer = 75 (Default)
Chain [3] term_buffer = 50 (Default)
Chain [3] window = 25 (Default)
Chain [3] algorithm = hmc (Default)
Chain [3] hmc
Chain [3] engine = nuts (Default)
Chain [3] nuts
Chain [3] max_depth = 10 (Default)
Chain [3] metric = diag_e (Default)
Chain [3] metric_file =  (Default)
Chain [3] stepsize = 1 (Default)
Chain [3] stepsize_jitter = 0 (Default)
Chain [3] num_chains = 1 (Default)
Chain [3] id = 3
Chain [3] data
Chain [3] file = /tmp/tmp5jyfvpx_/rxpcg1g5.json
Chain [3] init = 2 (Default)
Chain [3] random
Chain [3] seed = 78376
Chain [3] output
Chain [3] file = /storage/users/adadras/ANN-EAM/stan_results/RDM_cd/RDM_cd-20230102081807_3.csv
Chain [3] diagnostic_file =  (Default)
Chain [3] refresh = 100 (Default)
Chain [3] sig_figs = -1 (Default)
Chain [3] profile_file = profile.csv (Default)
Chain [3] num_threads = 1 (Default)
Chain [3] 
Chain [4] method = sample (Default)
Chain [4] sample
Chain [4] num_samples = 3500
Chain [4] num_warmup = 3500
Chain [4] save_warmup = 0 (Default)
Chain [4] thin = 1 (Default)
Chain [4] adapt
Chain [4] engaged = 1 (Default)
Chain [4] gamma = 0.050000000000000003 (Default)
Chain [4] delta = 0.80000000000000004 (Default)
Chain [4] kappa = 0.75 (Default)
Chain [4] t0 = 10 (Default)
Chain [4] init_buffer = 75 (Default)
Chain [4] term_buffer = 50 (Default)
Chain [4] window = 25 (Default)
Chain [4] algorithm = hmc (Default)
Chain [4] hmc
Chain [4] engine = nuts (Default)
Chain [4] nuts
Chain [4] max_depth = 10 (Default)
Chain [4] metric = diag_e (Default)
Chain [4] metric_file =  (Default)
Chain [4] stepsize = 1 (Default)
Chain [4] stepsize_jitter = 0 (Default)
Chain [4] num_chains = 1 (Default)
Chain [4] id = 4
Chain [4] data
Chain [4] file = /tmp/tmp5jyfvpx_/rxpcg1g5.json
Chain [4] init = 2 (Default)
Chain [4] random
Chain [4] seed = 78376
Chain [4] output
Chain [4] file = /storage/users/adadras/ANN-EAM/stan_results/RDM_cd/RDM_cd-20230102081807_4.csv
Chain [4] diagnostic_file =  (Default)
Chain [4] refresh = 100 (Default)
Chain [4] sig_figs = -1 (Default)
Chain [4] profile_file = profile.csv (Default)
Chain [4] num_threads = 1 (Default)
Chain [4] 
Chain [1] 
Chain [1] Gradient evaluation took 0.065037 seconds
Chain [1] 1000 transitions using 10 leapfrog steps per transition would take 650.37 seconds.
Chain [1] Adjust your expectations accordingly!
Chain [1] 
Chain [1] 
Chain [4] 
Chain [4] Gradient evaluation took 0.059847 seconds
Chain [4] 1000 transitions using 10 leapfrog steps per transition would take 598.47 seconds.
Chain [4] Adjust your expectations accordingly!
Chain [4] 
Chain [4] 
Chain [2] 
Chain [2] Gradient evaluation took 0.074371 seconds
Chain [2] 1000 transitions using 10 leapfrog steps per transition would take 743.71 seconds.
Chain [2] Adjust your expectations accordingly!
Chain [2] 
Chain [2] 
Chain [3] 
Chain [3] Gradient evaluation took 0.069144 seconds
Chain [3] 1000 transitions using 10 leapfrog steps per transition would take 691.44 seconds.
Chain [3] Adjust your expectations accordingly!
Chain [3] 
Chain [3] 
Chain [3] Iteration:    1 / 7000 [  0%]  (Warmup)
Chain [2] Iteration:    1 / 7000 [  0%]  (Warmup)
Chain [4] Iteration:    1 / 7000 [  0%]  (Warmup)
Chain [1] Iteration:    1 / 7000 [  0%]  (Warmup)
Chain [3] Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:
Chain [3] Exception: Exception: Exception: Phi: x is -nan, but must be not nan! (in '/tmp/tmpr1j6k1h0/tmp13eksge4.stan', line 13, column 8 to column 72) (in '/tmp/tmpr1j6k1h0/tmp13eksge4.stan', line 30, column 20 to column 74) (in '/tmp/tmpr1j6k1h0/tmp13eksge4.stan', line 168, column 4 to column 91)
Chain [3] If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,
Chain [3] but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.
Chain [3] 
Chain [2] Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:
Chain [2] Exception: Exception: Exception: Phi: x is -nan, but must be not nan! (in '/tmp/tmpr1j6k1h0/tmp13eksge4.stan', line 13, column 8 to column 72) (in '/tmp/tmpr1j6k1h0/tmp13eksge4.stan', line 34, column 20 to column 68) (in '/tmp/tmpr1j6k1h0/tmp13eksge4.stan', line 168, column 4 to column 91)
Chain [2] If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,
Chain [2] but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.
Chain [2] 
Chain [3] Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:
Chain [3] Exception: Exception: Exception: Phi: x is -nan, but must be not nan! (in '/tmp/tmpr1j6k1h0/tmp13eksge4.stan', line 13, column 8 to column 72) (in '/tmp/tmpr1j6k1h0/tmp13eksge4.stan', line 30, column 20 to column 74) (in '/tmp/tmpr1j6k1h0/tmp13eksge4.stan', line 168, column 4 to column 91)
Chain [3] If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,
Chain [3] but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.
Chain [3] 
Chain [4] Iteration:  100 / 7000 [  1%]  (Warmup)
Chain [1] Iteration:  100 / 7000 [  1%]  (Warmup)
Chain [3] Iteration:  100 / 7000 [  1%]  (Warmup)
Chain [2] Iteration:  100 / 7000 [  1%]  (Warmup)
Chain [4] Iteration:  200 / 7000 [  2%]  (Warmup)
Chain [3] Iteration:  200 / 7000 [  2%]  (Warmup)
Chain [1] Iteration:  200 / 7000 [  2%]  (Warmup)
Chain [2] Iteration:  200 / 7000 [  2%]  (Warmup)
Chain [4] Iteration:  300 / 7000 [  4%]  (Warmup)
Chain [3] Iteration:  300 / 7000 [  4%]  (Warmup)
Chain [1] Iteration:  300 / 7000 [  4%]  (Warmup)
Chain [2] Iteration:  300 / 7000 [  4%]  (Warmup)
Chain [4] Iteration:  400 / 7000 [  5%]  (Warmup)
Chain [1] Iteration:  400 / 7000 [  5%]  (Warmup)
Chain [3] Iteration:  400 / 7000 [  5%]  (Warmup)
Chain [2] Iteration:  400 / 7000 [  5%]  (Warmup)
Chain [1] Iteration:  500 / 7000 [  7%]  (Warmup)
Chain [4] Iteration:  500 / 7000 [  7%]  (Warmup)
Chain [3] Iteration:  500 / 7000 [  7%]  (Warmup)
Chain [2] Iteration:  500 / 7000 [  7%]  (Warmup)
Chain [4] Iteration:  600 / 7000 [  8%]  (Warmup)
Chain [1] Iteration:  600 / 7000 [  8%]  (Warmup)
Chain [3] Iteration:  600 / 7000 [  8%]  (Warmup)
Chain [2] Iteration:  600 / 7000 [  8%]  (Warmup)
Chain [4] Iteration:  700 / 7000 [ 10%]  (Warmup)
Chain [1] Iteration:  700 / 7000 [ 10%]  (Warmup)
Chain [3] Iteration:  700 / 7000 [ 10%]  (Warmup)
Chain [2] Iteration:  700 / 7000 [ 10%]  (Warmup)
Chain [4] Iteration:  800 / 7000 [ 11%]  (Warmup)
Chain [1] Iteration:  800 / 7000 [ 11%]  (Warmup)
Chain [3] Iteration:  800 / 7000 [ 11%]  (Warmup)
Chain [2] Iteration:  800 / 7000 [ 11%]  (Warmup)
Chain [4] Iteration:  900 / 7000 [ 12%]  (Warmup)
Chain [3] Iteration:  900 / 7000 [ 12%]  (Warmup)
Chain [1] Iteration:  900 / 7000 [ 12%]  (Warmup)
Chain [2] Iteration:  900 / 7000 [ 12%]  (Warmup)
Chain [4] Iteration: 1000 / 7000 [ 14%]  (Warmup)
Chain [3] Iteration: 1000 / 7000 [ 14%]  (Warmup)
Chain [2] Iteration: 1000 / 7000 [ 14%]  (Warmup)
Chain [1] Iteration: 1000 / 7000 [ 14%]  (Warmup)
Chain [4] Iteration: 1100 / 7000 [ 15%]  (Warmup)
Chain [3] Iteration: 1100 / 7000 [ 15%]  (Warmup)
Chain [2] Iteration: 1100 / 7000 [ 15%]  (Warmup)
Chain [1] Iteration: 1100 / 7000 [ 15%]  (Warmup)
Chain [4] Iteration: 1200 / 7000 [ 17%]  (Warmup)
Chain [3] Iteration: 1200 / 7000 [ 17%]  (Warmup)
Chain [2] Iteration: 1200 / 7000 [ 17%]  (Warmup)
Chain [1] Iteration: 1200 / 7000 [ 17%]  (Warmup)
Chain [4] Iteration: 1300 / 7000 [ 18%]  (Warmup)
Chain [3] Iteration: 1300 / 7000 [ 18%]  (Warmup)
Chain [2] Iteration: 1300 / 7000 [ 18%]  (Warmup)
Chain [1] Iteration: 1300 / 7000 [ 18%]  (Warmup)
Chain [4] Iteration: 1400 / 7000 [ 20%]  (Warmup)
Chain [3] Iteration: 1400 / 7000 [ 20%]  (Warmup)
Chain [2] Iteration: 1400 / 7000 [ 20%]  (Warmup)
Chain [1] Iteration: 1400 / 7000 [ 20%]  (Warmup)
Chain [3] Iteration: 1500 / 7000 [ 21%]  (Warmup)
Chain [4] Iteration: 1500 / 7000 [ 21%]  (Warmup)
Chain [2] Iteration: 1500 / 7000 [ 21%]  (Warmup)
Chain [1] Iteration: 1500 / 7000 [ 21%]  (Warmup)
Chain [4] Iteration: 1600 / 7000 [ 22%]  (Warmup)
Chain [3] Iteration: 1600 / 7000 [ 22%]  (Warmup)
Chain [2] Iteration: 1600 / 7000 [ 22%]  (Warmup)
Chain [1] Iteration: 1600 / 7000 [ 22%]  (Warmup)
Chain [4] Iteration: 1700 / 7000 [ 24%]  (Warmup)
Chain [3] Iteration: 1700 / 7000 [ 24%]  (Warmup)
Chain [1] Iteration: 1700 / 7000 [ 24%]  (Warmup)
Chain [2] Iteration: 1700 / 7000 [ 24%]  (Warmup)
Chain [4] Iteration: 1800 / 7000 [ 25%]  (Warmup)
Chain [3] Iteration: 1800 / 7000 [ 25%]  (Warmup)
Chain [1] Iteration: 1800 / 7000 [ 25%]  (Warmup)
Chain [2] Iteration: 1800 / 7000 [ 25%]  (Warmup)
Chain [4] Iteration: 1900 / 7000 [ 27%]  (Warmup)
Chain [3] Iteration: 1900 / 7000 [ 27%]  (Warmup)
Chain [1] Iteration: 1900 / 7000 [ 27%]  (Warmup)
Chain [2] Iteration: 1900 / 7000 [ 27%]  (Warmup)
Chain [4] Iteration: 2000 / 7000 [ 28%]  (Warmup)
Chain [3] Iteration: 2000 / 7000 [ 28%]  (Warmup)
Chain [1] Iteration: 2000 / 7000 [ 28%]  (Warmup)
Chain [2] Iteration: 2000 / 7000 [ 28%]  (Warmup)
Chain [4] Iteration: 2100 / 7000 [ 30%]  (Warmup)
Chain [3] Iteration: 2100 / 7000 [ 30%]  (Warmup)
Chain [1] Iteration: 2100 / 7000 [ 30%]  (Warmup)
Chain [4] Iteration: 2200 / 7000 [ 31%]  (Warmup)
Chain [2] Iteration: 2100 / 7000 [ 30%]  (Warmup)
Chain [3] Iteration: 2200 / 7000 [ 31%]  (Warmup)
Chain [1] Iteration: 2200 / 7000 [ 31%]  (Warmup)
Chain [4] Iteration: 2300 / 7000 [ 32%]  (Warmup)
Chain [2] Iteration: 2200 / 7000 [ 31%]  (Warmup)
Chain [3] Iteration: 2300 / 7000 [ 32%]  (Warmup)
Chain [1] Iteration: 2300 / 7000 [ 32%]  (Warmup)
Chain [4] Iteration: 2400 / 7000 [ 34%]  (Warmup)
Chain [2] Iteration: 2300 / 7000 [ 32%]  (Warmup)
Chain [1] Iteration: 2400 / 7000 [ 34%]  (Warmup)
Chain [3] Iteration: 2400 / 7000 [ 34%]  (Warmup)
Chain [4] Iteration: 2500 / 7000 [ 35%]  (Warmup)
Chain [1] Iteration: 2500 / 7000 [ 35%]  (Warmup)
Chain [2] Iteration: 2400 / 7000 [ 34%]  (Warmup)
Chain [3] Iteration: 2500 / 7000 [ 35%]  (Warmup)
Chain [4] Iteration: 2600 / 7000 [ 37%]  (Warmup)
Chain [1] Iteration: 2600 / 7000 [ 37%]  (Warmup)
Chain [3] Iteration: 2600 / 7000 [ 37%]  (Warmup)
Chain [2] Iteration: 2500 / 7000 [ 35%]  (Warmup)
Chain [4] Iteration: 2700 / 7000 [ 38%]  (Warmup)
Chain [1] Iteration: 2700 / 7000 [ 38%]  (Warmup)
Chain [3] Iteration: 2700 / 7000 [ 38%]  (Warmup)
Chain [2] Iteration: 2600 / 7000 [ 37%]  (Warmup)
Chain [4] Iteration: 2800 / 7000 [ 40%]  (Warmup)
Chain [1] Iteration: 2800 / 7000 [ 40%]  (Warmup)
Chain [3] Iteration: 2800 / 7000 [ 40%]  (Warmup)
Chain [2] Iteration: 2700 / 7000 [ 38%]  (Warmup)
Chain [4] Iteration: 2900 / 7000 [ 41%]  (Warmup)
Chain [3] Iteration: 2900 / 7000 [ 41%]  (Warmup)
Chain [1] Iteration: 2900 / 7000 [ 41%]  (Warmup)
Chain [2] Iteration: 2800 / 7000 [ 40%]  (Warmup)
Chain [4] Iteration: 3000 / 7000 [ 42%]  (Warmup)
Chain [3] Iteration: 3000 / 7000 [ 42%]  (Warmup)
Chain [1] Iteration: 3000 / 7000 [ 42%]  (Warmup)
Chain [2] Iteration: 2900 / 7000 [ 41%]  (Warmup)
Chain [4] Iteration: 3100 / 7000 [ 44%]  (Warmup)
Chain [2] Iteration: 3000 / 7000 [ 42%]  (Warmup)
Chain [1] Iteration: 3100 / 7000 [ 44%]  (Warmup)
Chain [3] Iteration: 3100 / 7000 [ 44%]  (Warmup)
Chain [4] Iteration: 3200 / 7000 [ 45%]  (Warmup)
Chain [2] Iteration: 3100 / 7000 [ 44%]  (Warmup)
Chain [1] Iteration: 3200 / 7000 [ 45%]  (Warmup)
Chain [3] Iteration: 3200 / 7000 [ 45%]  (Warmup)
Chain [4] Iteration: 3300 / 7000 [ 47%]  (Warmup)
Chain [2] Iteration: 3200 / 7000 [ 45%]  (Warmup)
Chain [1] Iteration: 3300 / 7000 [ 47%]  (Warmup)
Chain [3] Iteration: 3300 / 7000 [ 47%]  (Warmup)
Chain [4] Iteration: 3400 / 7000 [ 48%]  (Warmup)
Chain [2] Iteration: 3300 / 7000 [ 47%]  (Warmup)
Chain [1] Iteration: 3400 / 7000 [ 48%]  (Warmup)
Chain [3] Iteration: 3400 / 7000 [ 48%]  (Warmup)
Chain [2] Iteration: 3400 / 7000 [ 48%]  (Warmup)
Chain [4] Iteration: 3500 / 7000 [ 50%]  (Warmup)
Chain [4] Iteration: 3501 / 7000 [ 50%]  (Sampling)
Chain [1] Iteration: 3500 / 7000 [ 50%]  (Warmup)
Chain [1] Iteration: 3501 / 7000 [ 50%]  (Sampling)
Chain [3] Iteration: 3500 / 7000 [ 50%]  (Warmup)
Chain [3] Iteration: 3501 / 7000 [ 50%]  (Sampling)
Chain [2] Iteration: 3500 / 7000 [ 50%]  (Warmup)
Chain [2] Iteration: 3501 / 7000 [ 50%]  (Sampling)
Chain [4] Iteration: 3600 / 7000 [ 51%]  (Sampling)
Chain [3] Iteration: 3600 / 7000 [ 51%]  (Sampling)
Chain [2] Iteration: 3600 / 7000 [ 51%]  (Sampling)
Chain [1] Iteration: 3600 / 7000 [ 51%]  (Sampling)
Chain [4] Iteration: 3700 / 7000 [ 52%]  (Sampling)
Chain [2] Iteration: 3700 / 7000 [ 52%]  (Sampling)
Chain [3] Iteration: 3700 / 7000 [ 52%]  (Sampling)
Chain [2] Iteration: 3800 / 7000 [ 54%]  (Sampling)
Chain [4] Iteration: 3800 / 7000 [ 54%]  (Sampling)
Chain [3] Iteration: 3800 / 7000 [ 54%]  (Sampling)
Chain [2] Iteration: 3900 / 7000 [ 55%]  (Sampling)
Chain [1] Iteration: 3700 / 7000 [ 52%]  (Sampling)
Chain [2] Iteration: 4000 / 7000 [ 57%]  (Sampling)
Chain [4] Iteration: 3900 / 7000 [ 55%]  (Sampling)
Chain [3] Iteration: 3900 / 7000 [ 55%]  (Sampling)
Chain [2] Iteration: 4100 / 7000 [ 58%]  (Sampling)
Chain [4] Iteration: 4000 / 7000 [ 57%]  (Sampling)
Chain [2] Iteration: 4200 / 7000 [ 60%]  (Sampling)
Chain [3] Iteration: 4000 / 7000 [ 57%]  (Sampling)
Chain [1] Iteration: 3800 / 7000 [ 54%]  (Sampling)
Chain [2] Iteration: 4300 / 7000 [ 61%]  (Sampling)
Chain [4] Iteration: 4100 / 7000 [ 58%]  (Sampling)
Chain [3] Iteration: 4100 / 7000 [ 58%]  (Sampling)
Chain [2] Iteration: 4400 / 7000 [ 62%]  (Sampling)
Chain [1] Iteration: 3900 / 7000 [ 55%]  (Sampling)
Chain [4] Iteration: 4200 / 7000 [ 60%]  (Sampling)
Chain [2] Iteration: 4500 / 7000 [ 64%]  (Sampling)
Chain [3] Iteration: 4200 / 7000 [ 60%]  (Sampling)
Chain [2] Iteration: 4600 / 7000 [ 65%]  (Sampling)
Chain [4] Iteration: 4300 / 7000 [ 61%]  (Sampling)
Chain [3] Iteration: 4300 / 7000 [ 61%]  (Sampling)
Chain [2] Iteration: 4700 / 7000 [ 67%]  (Sampling)
Chain [1] Iteration: 4000 / 7000 [ 57%]  (Sampling)
Chain [4] Iteration: 4400 / 7000 [ 62%]  (Sampling)
Chain [2] Iteration: 4800 / 7000 [ 68%]  (Sampling)
Chain [3] Iteration: 4400 / 7000 [ 62%]  (Sampling)
Chain [2] Iteration: 4900 / 7000 [ 70%]  (Sampling)
Chain [4] Iteration: 4500 / 7000 [ 64%]  (Sampling)
Chain [3] Iteration: 4500 / 7000 [ 64%]  (Sampling)
Chain [2] Iteration: 5000 / 7000 [ 71%]  (Sampling)
Chain [1] Iteration: 4100 / 7000 [ 58%]  (Sampling)
Chain [2] Iteration: 5100 / 7000 [ 72%]  (Sampling)
Chain [4] Iteration: 4600 / 7000 [ 65%]  (Sampling)
Chain [3] Iteration: 4600 / 7000 [ 65%]  (Sampling)
Chain [2] Iteration: 5200 / 7000 [ 74%]  (Sampling)
Chain [4] Iteration: 4700 / 7000 [ 67%]  (Sampling)
Chain [1] Iteration: 4200 / 7000 [ 60%]  (Sampling)
Chain [2] Iteration: 5300 / 7000 [ 75%]  (Sampling)
Chain [3] Iteration: 4700 / 7000 [ 67%]  (Sampling)
Chain [2] Iteration: 5400 / 7000 [ 77%]  (Sampling)
Chain [4] Iteration: 4800 / 7000 [ 68%]  (Sampling)
Chain [3] Iteration: 4800 / 7000 [ 68%]  (Sampling)
Chain [2] Iteration: 5500 / 7000 [ 78%]  (Sampling)
Chain [1] Iteration: 4300 / 7000 [ 61%]  (Sampling)
Chain [4] Iteration: 4900 / 7000 [ 70%]  (Sampling)
Chain [2] Iteration: 5600 / 7000 [ 80%]  (Sampling)
Chain [3] Iteration: 4900 / 7000 [ 70%]  (Sampling)
Chain [2] Iteration: 5700 / 7000 [ 81%]  (Sampling)
Chain [4] Iteration: 5000 / 7000 [ 71%]  (Sampling)
Chain [3] Iteration: 5000 / 7000 [ 71%]  (Sampling)
Chain [1] Iteration: 4400 / 7000 [ 62%]  (Sampling)
Chain [2] Iteration: 5800 / 7000 [ 82%]  (Sampling)
Chain [4] Iteration: 5100 / 7000 [ 72%]  (Sampling)
Chain [2] Iteration: 5900 / 7000 [ 84%]  (Sampling)
Chain [3] Iteration: 5100 / 7000 [ 72%]  (Sampling)
Chain [2] Iteration: 6000 / 7000 [ 85%]  (Sampling)
Chain [4] Iteration: 5200 / 7000 [ 74%]  (Sampling)
Chain [1] Iteration: 4500 / 7000 [ 64%]  (Sampling)
Chain [3] Iteration: 5200 / 7000 [ 74%]  (Sampling)
Chain [2] Iteration: 6100 / 7000 [ 87%]  (Sampling)
Chain [4] Iteration: 5300 / 7000 [ 75%]  (Sampling)
Chain [2] Iteration: 6200 / 7000 [ 88%]  (Sampling)
Chain [3] Iteration: 5300 / 7000 [ 75%]  (Sampling)
Chain [1] Iteration: 4600 / 7000 [ 65%]  (Sampling)
Chain [2] Iteration: 6300 / 7000 [ 90%]  (Sampling)
Chain [4] Iteration: 5400 / 7000 [ 77%]  (Sampling)
Chain [3] Iteration: 5400 / 7000 [ 77%]  (Sampling)
Chain [2] Iteration: 6400 / 7000 [ 91%]  (Sampling)
Chain [4] Iteration: 5500 / 7000 [ 78%]  (Sampling)
Chain [1] Iteration: 4700 / 7000 [ 67%]  (Sampling)
Chain [2] Iteration: 6500 / 7000 [ 92%]  (Sampling)
Chain [3] Iteration: 5500 / 7000 [ 78%]  (Sampling)
Chain [4] Iteration: 5600 / 7000 [ 80%]  (Sampling)
Chain [2] Iteration: 6600 / 7000 [ 94%]  (Sampling)
Chain [3] Iteration: 5600 / 7000 [ 80%]  (Sampling)
Chain [2] Iteration: 6700 / 7000 [ 95%]  (Sampling)
Chain [4] Iteration: 5700 / 7000 [ 81%]  (Sampling)
Chain [1] Iteration: 4800 / 7000 [ 68%]  (Sampling)
Chain [2] Iteration: 6800 / 7000 [ 97%]  (Sampling)
Chain [3] Iteration: 5700 / 7000 [ 81%]  (Sampling)
Chain [4] Iteration: 5800 / 7000 [ 82%]  (Sampling)
Chain [2] Iteration: 6900 / 7000 [ 98%]  (Sampling)
Chain [1] Iteration: 4900 / 7000 [ 70%]  (Sampling)
Chain [3] Iteration: 5800 / 7000 [ 82%]  (Sampling)
Chain [2] Iteration: 7000 / 7000 [100%]  (Sampling)
Chain [2] 
Chain [2] Elapsed Time: 18377.8 seconds (Warm-up)
Chain [2] 14678 seconds (Sampling)
Chain [2] 33055.8 seconds (Total)
Chain [2] 
Chain [2] 
Chain [4] Iteration: 5900 / 7000 [ 84%]  (Sampling)
Chain [3] Iteration: 5900 / 7000 [ 84%]  (Sampling)
Chain [4] Iteration: 6000 / 7000 [ 85%]  (Sampling)
Chain [1] Iteration: 5000 / 7000 [ 71%]  (Sampling)
Chain [3] Iteration: 6000 / 7000 [ 85%]  (Sampling)
Chain [4] Iteration: 6100 / 7000 [ 87%]  (Sampling)
Chain [1] Iteration: 5100 / 7000 [ 72%]  (Sampling)
Chain [3] Iteration: 6100 / 7000 [ 87%]  (Sampling)
Chain [4] Iteration: 6200 / 7000 [ 88%]  (Sampling)
Chain [3] Iteration: 6200 / 7000 [ 88%]  (Sampling)
Chain [4] Iteration: 6300 / 7000 [ 90%]  (Sampling)
Chain [1] Iteration: 5200 / 7000 [ 74%]  (Sampling)
Chain [3] Iteration: 6300 / 7000 [ 90%]  (Sampling)
Chain [4] Iteration: 6400 / 7000 [ 91%]  (Sampling)
Chain [3] Iteration: 6400 / 7000 [ 91%]  (Sampling)
Chain [4] Iteration: 6500 / 7000 [ 92%]  (Sampling)
Chain [1] Iteration: 5300 / 7000 [ 75%]  (Sampling)
Chain [3] Iteration: 6500 / 7000 [ 92%]  (Sampling)
Chain [4] Iteration: 6600 / 7000 [ 94%]  (Sampling)
Chain [3] Iteration: 6600 / 7000 [ 94%]  (Sampling)
Chain [1] Iteration: 5400 / 7000 [ 77%]  (Sampling)
Chain [4] Iteration: 6700 / 7000 [ 95%]  (Sampling)
Chain [3] Iteration: 6700 / 7000 [ 95%]  (Sampling)
Chain [4] Iteration: 6800 / 7000 [ 97%]  (Sampling)
Chain [3] Iteration: 6800 / 7000 [ 97%]  (Sampling)
Chain [1] Iteration: 5500 / 7000 [ 78%]  (Sampling)
Chain [4] Iteration: 6900 / 7000 [ 98%]  (Sampling)
Chain [3] Iteration: 6900 / 7000 [ 98%]  (Sampling)
Chain [4] Iteration: 7000 / 7000 [100%]  (Sampling)
Chain [4] 
Chain [4] Elapsed Time: 17932.6 seconds (Warm-up)
Chain [4] 22917.3 seconds (Sampling)
Chain [4] 40849.9 seconds (Total)
Chain [4] 
Chain [4] 
Chain [1] Iteration: 5600 / 7000 [ 80%]  (Sampling)
Chain [3] Iteration: 7000 / 7000 [100%]  (Sampling)
Chain [3] 
Chain [3] Elapsed Time: 18128.6 seconds (Warm-up)
Chain [3] 22916.1 seconds (Sampling)
Chain [3] 41044.6 seconds (Total)
Chain [3] 
Chain [3] 
Chain [1] Iteration: 5700 / 7000 [ 81%]  (Sampling)
Chain [1] Iteration: 5800 / 7000 [ 82%]  (Sampling)
Chain [1] Iteration: 5900 / 7000 [ 84%]  (Sampling)
Chain [1] Iteration: 6000 / 7000 [ 85%]  (Sampling)
Chain [1] Iteration: 6100 / 7000 [ 87%]  (Sampling)
Chain [1] Iteration: 6200 / 7000 [ 88%]  (Sampling)
Chain [1] Iteration: 6300 / 7000 [ 90%]  (Sampling)
Chain [1] Iteration: 6400 / 7000 [ 91%]  (Sampling)
Chain [1] Iteration: 6500 / 7000 [ 92%]  (Sampling)
Chain [1] Iteration: 6600 / 7000 [ 94%]  (Sampling)
Chain [1] Iteration: 6700 / 7000 [ 95%]  (Sampling)
Chain [1] Iteration: 6800 / 7000 [ 97%]  (Sampling)
Chain [1] Iteration: 6900 / 7000 [ 98%]  (Sampling)
Chain [1] Iteration: 7000 / 7000 [100%]  (Sampling)
Chain [1] 
Chain [1] Elapsed Time: 18050.4 seconds (Warm-up)
Chain [1] 38150.8 seconds (Sampling)
Chain [1] 56201.3 seconds (Total)
Chain [1] 
Chain [1] 
***hmc diagnostics:
Processing csv files: /storage/users/adadras/ANN-EAM/stan_results/RDM_cd/RDM_cd-20230102081807_1.csv, /storage/users/adadras/ANN-EAM/stan_results/RDM_cd/RDM_cd-20230102081807_2.csv, /storage/users/adadras/ANN-EAM/stan_results/RDM_cd/RDM_cd-20230102081807_3.csv, /storage/users/adadras/ANN-EAM/stan_results/RDM_cd/RDM_cd-20230102081807_4.csv

Checking sampler transitions treedepth.
25 of 14000 (0.18%) transitions hit the maximum treedepth limit of 10, or 2^10 leapfrog steps.
Trajectories that are prematurely terminated due to this limit will result in slow exploration.
For optimal performance, increase this limit.

Checking sampler transitions for divergences.
No divergent transitions found.

Checking E-BFMI - sampler transitions HMC potential energy.
E-BFMI satisfactory.

Effective sample size satisfactory.

Split R-hat values satisfactory all parameters.

Processing complete.

***DF: 
                          Mean     MCSE  StdDev  ...    N_Eff  N_Eff/s  R_hat
name                                             ...                         
lp__                 -5200.000  0.61000  31.000  ...   2500.0    0.025    1.0
mu_ndt                  -0.034  0.00190   0.089  ...   2100.0    0.022    1.0
mu_threshold_word        1.300  0.00063   0.044  ...   4900.0    0.049    1.0
mu_threshold_nonword     1.600  0.00060   0.043  ...   5100.0    0.051    1.0
mu_drift_word[1]         3.700  0.00180   0.100  ...   3008.0    0.030    1.0
...                        ...      ...     ...  ...      ...      ...    ...
log_lik[36677]          -2.300  0.00150   0.180  ...  15377.0    0.160    1.0
log_lik[36678]          -1.600  0.00100   0.130  ...  16588.0    0.170    1.0
log_lik[36679]          -1.600  0.00100   0.130  ...  16677.0    0.170    1.0
log_lik[36680]          -1.800  0.00110   0.140  ...  16293.0    0.170    1.0
log_lik[36681]          -1.900  0.00150   0.200  ...  18118.0    0.180    1.0

[221914 rows x 9 columns]
***Rhat > 1.01: 
0
None
Empty DataFrame
Columns: [Mean, MCSE, StdDev, 5%, 50%, 95%, N_Eff, N_Eff/s, R_hat]
Index: []
       Mean  MCSE  StdDev   5%  50%  95%  N_Eff  N_Eff/s  R_hat
count   0.0   0.0     0.0  0.0  0.0  0.0    0.0      0.0    0.0
mean    NaN   NaN     NaN  NaN  NaN  NaN    NaN      NaN    NaN
std     NaN   NaN     NaN  NaN  NaN  NaN    NaN      NaN    NaN
min     NaN   NaN     NaN  NaN  NaN  NaN    NaN      NaN    NaN
25%     NaN   NaN     NaN  NaN  NaN  NaN    NaN      NaN    NaN
50%     NaN   NaN     NaN  NaN  NaN  NaN    NaN      NaN    NaN
75%     NaN   NaN     NaN  NaN  NaN  NaN    NaN      NaN    NaN
max     NaN   NaN     NaN  NaN  NaN  NaN    NaN      NaN    NaN
HF words, word drift mean and std:
3.703896689450859 0.030077688621170426
HF words, nonword drift mean and std:
0.8891587765472349 0.04767194541482077
LF words word drift mean and std:
2.6373979848902853 0.026082909973064852
LF words nonword drift mean and std:
1.4695033649820586 0.031342127124012395
NW words word drift mean and std:
0.5364807968477203 0.027895632577269635
NW words nonword drift mean and std:
3.081583854705825 0.02230778107433003
HF words, word threshold mean and std:
1.5232115405484614 0.016952019030333595
HF words, nonword threshold mean and std:
1.7740112744726682 0.017620202269726132
LF words word threshold mean and std:
1.5247867994712687 0.016967326155929885
LF words nonword threshold mean and std:
1.7708774266249883 0.01761914822679637
NW words word threshold mean and std:
1.5271394590147767 0.016934853563327017
NW words nonword threshold mean and std:
1.7758805133341915 0.017623518622253215
HF words ndt_t mean and std:
0.26494535683892867 0.003037531001014017
LF words ndt_t mean and std:
0.26390083028411815 0.0030183498303067466
Non Words ndt_t mean and std:
0.26378485216981795 0.003031991511690352
Estimation Fit metrics:
{'lppd': -4389.488708140893, 'p_waic': 821.2653706149811, 'waic': 10421.50815751175, 'waic_se': 464.10348989284086}
INFO:cmdstanpy:deleting tmpfiles dir: /tmp/tmp5jyfvpx_
INFO:cmdstanpy:done
